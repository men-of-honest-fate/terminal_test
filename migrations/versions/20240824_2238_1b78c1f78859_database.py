"""database

Revision ID: 1b78c1f78859
Revises: 
Create Date: 2024-08-24 22:38:54.783811

"""

from alembic import op
import sqlalchemy as sa
import os


# revision identifiers, used by Alembic.
revision = "1b78c1f78859"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table_schema("MODELS_DB")
    op.create_table(
        "site",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("url", sa.String(), nullable=False),
        sa.Column("bank_number", sa.String(), nullable=False),
        sa.Column("login", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="MODELS_DB",
    )
    op.create_table(
        "terminal",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("limit_sum", sa.Integer(), nullable=False),
        sa.Column("limit_req", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="MODELS_DB",
    )
    op.create_group(
        "test_db_read" if os.getenv("ENVIRONMENT") != "production" else "prod_db_read"
    )
    op.create_group(
        "test_db_write" if os.getenv("ENVIRONMENT") != "production" else "prod_db_write"
    )
    op.create_group(
        "test_db_all" if os.getenv("ENVIRONMENT") != "production" else "prod_db_all"
    )
    op.grant_on_schema(
        "test_db_read" if os.getenv("ENVIRONMENT") != "production" else "prod_db_read",
        "MODELS_DB",
    )
    op.grant_on_schema(
        (
            "test_db_write"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_db_write"
        ),
        "MODELS_DB",
    )
    op.grant_on_schema(
        "test_db_all" if os.getenv("ENVIRONMENT") != "production" else "prod_db_all",
        "MODELS_DB",
    )
    op.grant_on_table(
        "test_db_read" if os.getenv("ENVIRONMENT") != "production" else "prod_db_read",
        ["SELECT"],
        '"MODELS_DB".terminal',
    )
    op.grant_on_table(
        (
            "test_db_write"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_db_write"
        ),
        ["SELECT", "UPDATE", "DELETE", "TRUNCATE", "INSERT"],
        '"MODELS_DB".terminal',
    )
    op.grant_on_table(
        "test_db_all" if os.getenv("ENVIRONMENT") != "production" else "prod_db_all",
        ["ALL"],
        '"MODELS_DB".terminal',
    )
    op.grant_on_table(
        "test_db_read" if os.getenv("ENVIRONMENT") != "production" else "prod_db_read",
        ["SELECT"],
        '"MODELS_DB".site',
    )
    op.grant_on_table(
        (
            "test_db_write"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_db_write"
        ),
        ["SELECT", "UPDATE", "DELETE", "TRUNCATE", "INSERT"],
        '"MODELS_DB".site',
    )
    op.grant_on_table(
        "test_db_all" if os.getenv("ENVIRONMENT") != "production" else "prod_db_all",
        ["ALL"],
        '"MODELS_DB".site',
    )
    op.grant_on_table(
        "test_db_read" if os.getenv("ENVIRONMENT") != "production" else "prod_db_read",
        ["SELECT"],
        '"MODELS_DB".site',
    )
    op.grant_on_table(
        (
            "test_db_write"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_db_write"
        ),
        ["SELECT", "UPDATE", "DELETE", "TRUNCATE", "INSERT"],
        '"MODELS_DB".site',
    )
    op.grant_on_table(
        "test_db_all" if os.getenv("ENVIRONMENT") != "production" else "prod_db_all",
        ["ALL"],
        '"MODELS_DB".site',
    )
    op.grant_on_table(
        "test_db_read" if os.getenv("ENVIRONMENT") != "production" else "prod_db_read",
        ["SELECT"],
        '"MODELS_DB".terminal',
    )
    op.grant_on_table(
        (
            "test_db_write"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_db_write"
        ),
        ["SELECT", "UPDATE", "DELETE", "TRUNCATE", "INSERT"],
        '"MODELS_DB".terminal',
    )
    op.grant_on_table(
        "test_db_all" if os.getenv("ENVIRONMENT") != "production" else "prod_db_all",
        ["ALL"],
        '"MODELS_DB".terminal',
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.revoke_on_table(
        "test_db_all" if os.getenv("ENVIRONMENT") != "production" else "prod_db_all",
        ["ALL"],
        '"MODELS_DB".terminal',
    )
    op.revoke_on_table(
        (
            "test_db_write"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_db_write"
        ),
        ["SELECT", "UPDATE", "DELETE", "TRUNCATE", "INSERT"],
        '"MODELS_DB".terminal',
    )
    op.revoke_on_table(
        "test_db_read" if os.getenv("ENVIRONMENT") != "production" else "prod_db_read",
        ["SELECT"],
        '"MODELS_DB".terminal',
    )
    op.revoke_on_table(
        "test_db_all" if os.getenv("ENVIRONMENT") != "production" else "prod_db_all",
        ["ALL"],
        '"MODELS_DB".site',
    )
    op.revoke_on_table(
        (
            "test_db_write"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_db_write"
        ),
        ["SELECT", "UPDATE", "DELETE", "TRUNCATE", "INSERT"],
        '"MODELS_DB".site',
    )
    op.revoke_on_table(
        "test_db_read" if os.getenv("ENVIRONMENT") != "production" else "prod_db_read",
        ["SELECT"],
        '"MODELS_DB".site',
    )
    op.revoke_on_table(
        "test_db_all" if os.getenv("ENVIRONMENT") != "production" else "prod_db_all",
        ["ALL"],
        '"MODELS_DB".site',
    )
    op.revoke_on_table(
        (
            "test_db_write"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_db_write"
        ),
        ["SELECT", "UPDATE", "DELETE", "TRUNCATE", "INSERT"],
        '"MODELS_DB".site',
    )
    op.revoke_on_table(
        "test_db_read" if os.getenv("ENVIRONMENT") != "production" else "prod_db_read",
        ["SELECT"],
        '"MODELS_DB".site',
    )
    op.revoke_on_table(
        "test_db_all" if os.getenv("ENVIRONMENT") != "production" else "prod_db_all",
        ["ALL"],
        '"MODELS_DB".terminal',
    )
    op.revoke_on_table(
        (
            "test_db_write"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_db_write"
        ),
        ["SELECT", "UPDATE", "DELETE", "TRUNCATE", "INSERT"],
        '"MODELS_DB".terminal',
    )
    op.revoke_on_table(
        "test_db_read" if os.getenv("ENVIRONMENT") != "production" else "prod_db_read",
        ["SELECT"],
        '"MODELS_DB".terminal',
    )
    op.revoke_on_schema(
        "test_db_all" if os.getenv("ENVIRONMENT") != "production" else "prod_db_all",
        "MODELS_DB",
    )
    op.revoke_on_schema(
        (
            "test_db_write"
            if os.getenv("ENVIRONMENT") != "production"
            else "prod_db_write"
        ),
        "MODELS_DB",
    )
    op.revoke_on_schema(
        "test_db_read" if os.getenv("ENVIRONMENT") != "production" else "prod_db_read",
        "MODELS_DB",
    )
    op.drop_table("terminal", schema="MODELS_DB")
    op.drop_table("site", schema="MODELS_DB")
    op.delete_group(
        "test_db_all" if os.getenv("ENVIRONMENT") != "production" else "prod_db_all"
    )
    op.delete_group(
        "test_db_write" if os.getenv("ENVIRONMENT") != "production" else "prod_db_write"
    )
    op.delete_group(
        "test_db_read" if os.getenv("ENVIRONMENT") != "production" else "prod_db_read"
    )
    op.drop_table_schema("MODELS_DB")
    # ### end Alembic commands ###
